{"version":3,"sources":["Components/SidebarData.js","Components/Navbar.js","Pages/Home.js","Pages/Activities.js","Pages/Expenses.js","Pages/Budgets.js","Pages/Notify.js","Pages/ExitApp.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","cName","Navbar","useState","sidebar","setSidebar","showSidebar","Provider","value","color","className","to","onClick","map","item","index","Home","alt","src","process","height","width","Activities","Expenses","Budgets","Notify","ExitApp","App","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0f14a520.chunk.js","sourcesContent":["import React from 'react'\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport * as IoIcons from \"react-icons/io\";\n\nexport const SidebarData = [\n\n    {\n    title: 'Home',\n    path:'/',\n    icon:<AiIcons.AiFillHome/>,\n    cName: 'nav-text'\n    },\n    {\n        title: 'Activities',\n        path: '/activities',\n        icon: <AiIcons.AiFillTablet />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Budgets',\n        path: '/budgets',\n        icon: <AiIcons.AiFillBank />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Expenses',\n        path: '/expenses',\n        icon: <AiIcons.AiFillMoneyCollect />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Notifications',\n        path: '/notify',\n        icon: <FaIcons.FaEnvelopeOpenText />,\n        cName: 'nav-text'\n    },\n    {\n        title: 'Exit App',\n        path: '/exitapp',\n        icon: <IoIcons.IoIosLogOut />,\n        cName: 'nav-text'\n    },\n\n]\n","import React, {useState} from 'react'\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from 'react-router-dom';\nimport {SidebarData} from './SidebarData';\nimport './Navbar.css';\nimport {IconContext} from 'react-icons'\n\nfunction Navbar() {\n    const [sidebar, setSidebar] = useState(false)\n\n    const showSidebar = () => setSidebar(!sidebar)\n    return (\n        <>\n        <IconContext.Provider value = {{color:'#fff'}} >\n           <div className=\"navbar\">\n               <Link to =\"#\" className='menu-bars'>\n                   <FaIcons.FaBars onClick={showSidebar}/>\n\n               </Link>\n           </div> \n           <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n                    <ul className='nav-menu-items' onClick={showSidebar}>\n                <li className='navbar-toggle'>\n                    <Link to=\"#\" className='menu-bars'>\n                        <AiIcons.AiOutlineClose  />\n\n\n                    </Link>\n                </li>\n                {SidebarData.map((item,index)=>{\n        return (\n\n            <li key={index} className = {item.cName}>\n                <Link to={item.path} >\n                    {item.icon}\n                    <span>{item.title}</span>\n                </Link>\n            </li>\n        ) \n\n                })}\n            </ul>\n\n           </nav>\n            </IconContext.Provider>\n        </>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\n\nfunction Home() {\n    return (\n        <div className=\"home\">\n            <center>\n                <h3 >  This is my very first PWA app! </h3>\n\n                <header className=\"App-header\">\n\n                    <img alt=\"Logo two\" src={process.env.PUBLIC_URL + \"/Morkellinho.jpeg\"} height=\"400\" width=\"250\" />\n                    <p>\n                        This for Nebula!\n        </p>\n\n                </header>\n\n            </center>\n            \n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react';\n\nfunction Activities() {\n\n    return (\n        <div className = 'activities' >\n\n       <h3>About our Activities 1</h3>\n        \n        </div>\n    );\n\n }\nexport default Activities;","import React from 'react'\n\nfunction Expenses() {\n    return (\n        <div className='expenses'>\n            <h3> Expenses for the month 3</h3>\n        </div>\n    )\n}\n\nexport default Expenses\n","import React from 'react'\n\nfunction Budgets() {\n    return (\n\n        <center>\n\n        <div className='budgets'>\n            <h3>Budgets plans 2</h3>\n        </div>\n        </center>\n    )\n}\n\nexport default Budgets\n","import React from 'react'\n\nfunction Notify() {\n    return (\n\n    \n        <div className=\"notify\">\n            <h3>Notification messages</h3>\n        </div>\n    )\n}\n\nexport default Notify\n","import React from 'react'\n\nfunction ExitApp() {\n    return (\n        <div className= \"exitapp\">\n          <h1>bounce</h1>\n        </div>\n    )\n}\n\nexport default ExitApp\n","\n\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport { FaAlignCenter } from 'react-icons/fa';\nimport Home from './Pages/Home';\nimport Activities from './Pages/Activities';\nimport Expenses from './Pages/Expenses';\nimport Budgets from './Pages/Budgets';\nimport Notify from './Pages/Notify';\nimport ExitApp from './Pages/ExitApp';\n\n\nfunction App() {\n  return (\n   \n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home}/>\n          <Route path='/activities' component={Activities}/>\n          <Route path ='/expenses' component={Expenses}/>\n          <Route path ='/budgets' component={Budgets}/>\n          <Route path = '/notify' component={Notify}/>\n          <Route path='/exitapp' component={ExitApp} />\n        </Switch>\n      </Router>\n     \n    </>\n    \n  );\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}